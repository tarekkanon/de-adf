{
	"name": "02_dataflow_Dimensions",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Product_Table",
						"type": "DatasetReference"
					},
					"name": "ProductStream"
				},
				{
					"dataset": {
						"referenceName": "ProductCategory_Table",
						"type": "DatasetReference"
					},
					"name": "ProductCategoryStream"
				},
				{
					"dataset": {
						"referenceName": "ProductModel_Table",
						"type": "DatasetReference"
					},
					"name": "ProductModelStream"
				},
				{
					"dataset": {
						"referenceName": "Customers_Table",
						"type": "DatasetReference"
					},
					"name": "CustomersStream"
				},
				{
					"dataset": {
						"referenceName": "DimCustomers_Table",
						"type": "DatasetReference"
					},
					"name": "GETMAXCustomerSK"
				},
				{
					"dataset": {
						"referenceName": "DimCustomers_Table",
						"type": "DatasetReference"
					},
					"name": "DimCustomersLatest"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimProduct_Table",
						"type": "DatasetReference"
					},
					"name": "DimProductStream"
				},
				{
					"dataset": {
						"referenceName": "DimCustomers_Table",
						"type": "DatasetReference"
					},
					"name": "DimCustomersStream"
				},
				{
					"name": "CustomerSKSink"
				}
			],
			"transformations": [
				{
					"name": "ProductToProductCategory"
				},
				{
					"name": "ToProductModel"
				},
				{
					"name": "SelectColumnsStream"
				},
				{
					"name": "ProductSKStream"
				},
				{
					"name": "SelectColumnsCustomerStream"
				},
				{
					"name": "CustomerSKStream"
				},
				{
					"name": "CustomerSKUpdated"
				},
				{
					"name": "CustomersExistsInWarehouse"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStream",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategoryStream",
				"source(output(",
				"          ProductModelID as integer,",
				"          Name as string,",
				"          CatalogDescription as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductModelStream",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomersStream",
				"source(output(",
				"          CustomerSK as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT COALESCE(MAX(CustomerSK), 0) AS CustomerSK FROM DimCustomers',",
				"     format: 'query',",
				"     staged: true) ~> GETMAXCustomerSK",
				"source(output(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> DimCustomersLatest",
				"ProductStream, ProductCategoryStream join(ProductStream@ProductCategoryID == ProductCategoryStream@ProductCategoryID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductToProductCategory",
				"ProductToProductCategory, ProductModelStream join(ProductStream@ProductModelID == ProductModelStream@ProductModelID,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ToProductModel",
				"ToProductModel select(mapColumn(",
				"          ProductID,",
				"          ProductName = ProductStream@Name,",
				"          ProductNumber,",
				"          ProductCategoryName = ProductCategoryStream@Name,",
				"          ProductModelName = ProductModelStream@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsStream",
				"SelectColumnsStream keyGenerate(output(ProductSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> ProductSKStream",
				"CustomersExistsInWarehouse select(mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsCustomerStream",
				"SelectColumnsCustomerStream keyGenerate(output(CustomerSK as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> CustomerSKStream",
				"CustomerSKStream derive(CustomerSK = CustomerSK + CustomerSKSink#output().CustomerSK) ~> CustomerSKUpdated",
				"CustomersStream, DimCustomersLatest exists(CustomersStream@CustomerID == DimCustomersLatest@CustomerID,",
				"     negate:true,",
				"     broadcast: 'auto')~> CustomersExistsInWarehouse",
				"ProductSKStream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductSK as integer,",
				"          ProductID as integer,",
				"          ProductName as string,",
				"          ProductNumber as string,",
				"          ProductCategoryName as string,",
				"          ProductModelName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductSK,",
				"          ProductID,",
				"          ProductName,",
				"          ProductNumber,",
				"          ProductCategoryName,",
				"          ProductModelName",
				"     )) ~> DimProductStream",
				"CustomerSKUpdated sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerSK as integer,",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerSK,",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     )) ~> DimCustomersStream",
				"GETMAXCustomerSK sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          CustomerSK",
				"     )) ~> CustomerSKSink"
			]
		}
	}
}